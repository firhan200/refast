{"version":3,"sources":["components/notifications/NotificationPreview.js","components/notifications/NotificationContainer.js","components/messages/MessagePreview.js","components/messages/MessageContainer.js","components/layouts/Navbar.js","components/layouts/Menubar.js","components/styles/H4.js","components/styles/Box.js","components/styles/BoxTitle.js","components/styles/Container.js","components/styles/Row.js","components/styles/Col.js","components/styles/Alert.js","components/styles/Badge.js","components/styles/Button.js","components/styles/Form.js","components/styles/FormGroup.js","components/styles/Input.js","components/styles/Select.js","components/styles/Textarea.js","components/styles/Checkbox.js","components/styles/IconCard.js","components/styles/UserCard.js","components/styles/ImageCard.js","components/styles/ImageCardTitle.js","components/styles/ImageCardSubTitle.js","components/styles/ImageCardDescription.js","components/styles/ProductCard.js","components/styles/ProductCardName.js","components/styles/ProductCardImage.js","components/styles/ProductCardPrice.js","components/styles/ProductCardDescription.js","components/styles/ProductCardCategory.js","components/styles/Breadcrumb.js","components/styles/BreadcrumbItem.js","components/styles/Carousel.js","components/pages/LoginPage.js","components/pages/SignupPage.js","components/pages/ForgotPasswordPage.js","components/pages/ResetPasswordPage.js","components/pages/components/BoxPage.js","components/pages/components/AlertPage.js","components/pages/components/BadgePage.js","components/pages/components/ButtonPage.js","components/pages/components/FormsPage.js","components/pages/components/CardPage.js","components/pages/components/BreadcrumbsPage.js","components/pages/components/CarouselPage.js","App.js","serviceWorker.js","index.js"],"names":["NotificationPreview","notification","href","className","src","image","alt","title","time","NotificationContainer","aria-labelledby","id","map","key","to","message","text","MessagePreview","Navbar","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","placeholder","role","aria-haspopup","MessageContainer","Menubar","data-parent","H4","props","customClassName","align","children","Box","xs","xsOffset","sm","smOffset","md","mdOffset","lg","lgOffset","BoxTitle","icon","label","subLabel","Container","Row","Col","Alert","alertType","alertMessage","withIcon","alertIcon","toLowerCase","Badge","badgeType","badgeMessage","badgeIcon","badgeImage","Button","isLabelExist","inputButtonOutlined","isOutlined","isFull","buttonBehaviorType","buttonType","buttonSize","useAnotherColor","anotherColor","color","replace","size","isButtonRounded","isRounded","buttonIcon","customStyle","backgroundColor","style","onClick","handleClick","Form","onSubmit","handleSubmit","FormGroup","isRow","Input","inputType","useState","setType","inputName","name","inputId","maxLength","currentLength","setCurrentLength","pattern","autoComplete","isRequired","required","isValid","value","onChange","handleChange","onKeyUp","e","target","length","Select","Textarea","Checkbox","isCircular","isChecked","checked","IconCard","number","isButtonWavy","isWavy","toUpperCase","displayType","thousandSeparator","xmlns","viewBox","fillOpacity","d","UserCard","avatar","background","subTitle","isHorizontal","ImageCard","isOverlay","class","ImageCardTitle","ImageCardSubTitle","ImageCardDescription","description","slice","ProductCard","ProductCardName","ProductCardImage","ProductCardPrice","currency","price","afterDiscountPrice","ProductCardDescription","ProductCardCategory","Breadcrumb","BreadcrumbItem","isActive","Carousel","items","indicators","useControls","controls","data-ride","item","index","data-slide-to","useCaption","captionColor","data-slide","aria-hidden","LoginPage","email","setEmail","password","setPassword","rememberMe","setRememberMe","preventDefault","alert","SignupPage","setName","address","setAddress","agreed","setAgreed","ForgotPasswordPage","ResetPasswordPage","newPassword","setNewPassword","BoxPage","AlertPage","BadgePage","ButtonPage","FormsPage","firstNameValidation","setFirstNameValidation","passwordValidation","setPasswordValidation","selectValidation","setSelectValidation","addressValidation","setAddressValidation","squareCb","setSquareCb","circularCb","setCircularCb","squareCbChecked","setSquareCbChecked","circularCbChecked","setCircularCbChecked","CardPage","BreadcrumbsPage","CarouselPage","carouselImages","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7e76b9e6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst NotificationPreview = ({ notification }) => {\r\n    return(\r\n        <a href=\"#!\" className=\"dropdown-item\">\r\n            <div className=\"media\">\r\n                <img src={notification.image} className=\"img-fluid rounded align-self-start\" alt=\"...\" />\r\n                <div className=\"media-body\">\r\n                    <div className=\"title\">\r\n                        { notification.title }\r\n                    </div>\r\n                    <div className=\"time\">\r\n                        { notification.time }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </a>\r\n    );\r\n}\r\n\r\nexport default NotificationPreview;","import React from 'react';\r\n\r\n//libs\r\nimport { Link } from 'react-router-dom';\r\n\r\n/* components */\r\nimport NotificationPreview from './NotificationPreview.js';\r\n/* components */\r\n\r\nconst NotificationContainer = () => {\r\n    const notifications = [\r\n        {\r\n            id: 0,\r\n            image: '/images/avatar.png',\r\n            title: 'new order from John Doe',\r\n            time: '10:30 12 December 2019'\r\n        },\r\n        {\r\n            id: 1,\r\n            image: '/images/avatar.png',\r\n            title: 'order has been canceled by Thomas',\r\n            time: '10:07 12 December 2019'\r\n        },\r\n        {\r\n            id: 2,\r\n            image: '/images/avatar.png',\r\n            title: 'your password has been reset',\r\n            time: '08:16 7 November 2019'\r\n        }\r\n    ];\r\n\r\n    return(\r\n        <div className=\"dropdown-menu dropdown-menu-right notification-section\" aria-labelledby=\"notificationDropdown\">\r\n            <div className=\"container-title\"><i className=\"fa fa-bell\"></i> Notifications</div>\r\n            { notifications.map(notification => (\r\n                <NotificationPreview key={notification.id} notification={notification}/>\r\n            )) }\r\n            <center><Link to=\"/\" className=\"link\">show more</Link></center>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotificationContainer;","import React from 'react';\r\n\r\nconst NotificationPreview = ({ message }) => {\r\n    return(\r\n        <a href=\"#!\" className=\"dropdown-item\">\r\n            <div className=\"media\">\r\n                <img src={message.image} className=\"img-fluid rounded align-self-start\" alt=\"...\" />\r\n                <div className=\"media-body\">\r\n                    <div className=\"title\">\r\n                        { message.text }\r\n                    </div>\r\n                    <div className=\"time\">\r\n                        { message.time }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </a>\r\n    );\r\n}\r\n\r\nexport default NotificationPreview;","import React from 'react';\r\n\r\n//libs\r\nimport { Link } from 'react-router-dom';\r\n\r\n/* components */\r\nimport MessagePreview from './MessagePreview.js';\r\n/* components */\r\n\r\nconst NotificationContainer = () => {\r\n    const messages = [\r\n        {\r\n            id: 0,\r\n            image: '/images/avatar.png',\r\n            text: 'Hello john, how are you today?',\r\n            time: '10:30 12 December 2019'\r\n        },\r\n        {\r\n            id: 1,\r\n            image: '/images/avatar.png',\r\n            text: 'do we need to deploy this after noon?',\r\n            time: '10:07 12 December 2019'\r\n        },\r\n        {\r\n            id: 2,\r\n            image: '/images/avatar.png',\r\n            text: 'Thanks.',\r\n            time: '08:16 7 November 2019'\r\n        }\r\n    ];\r\n\r\n    return(\r\n        <div className=\"dropdown-menu dropdown-menu-right message-section\" aria-labelledby=\"messageDropdown\">\r\n            <div className=\"container-title\"><i className=\"fa fa-envelope\"></i> Messages</div>\r\n            { messages.map(message => (\r\n                <MessagePreview key={message.id} message={message}/>\r\n            )) }\r\n            <center><Link to=\"/\" className=\"link\">show more</Link></center>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotificationContainer;","import React from 'react';\r\n\r\n//libs\r\nimport { Link } from 'react-router-dom';\r\n\r\n/* components */\r\nimport NotificationContainer from './../notifications/NotificationContainer.js';\r\nimport MessageContainer from './../messages/MessageContainer.js';\r\n/* components */\r\n\r\nconst Navbar = () => {\r\n    return(\r\n        <nav className=\"top-navbar navbar navbar-expand navbar-light bg-light\">\r\n            <Link to=\"/\" className=\"navbar-brand\">Refast</Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-controls=\"navbar\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"navbar\">\r\n                <form className=\"form-inline\">\r\n                    <input className=\"form-control\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                </form>\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item dropdown notification\">\r\n                        <a href=\"#!\" className=\"nav-link dropdown-toggle\" id=\"notificationDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                            <i className=\"fa fa-bell\"></i>\r\n                            <span className=\"total-notification\">5</span>\r\n                        </a>\r\n                        <NotificationContainer />\r\n                    </li>\r\n                    <li className=\"nav-item dropdown notification\">\r\n                        <a href=\"#!\" className=\"nav-link dropdown-toggle\" id=\"messageDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                            <i className=\"fa fa-envelope\"></i>\r\n                            <span className=\"total-notification\">13</span>\r\n                        </a>\r\n                        <MessageContainer />\r\n                    </li>\r\n                    <li className=\"nav-item dropdown\">\r\n                        <a className=\"nav-link dropdown-toggle\" href=\"#!\" id=\"profileDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                            <img src=\"/images/avatar.png\" alt=\"avatar\" className=\"avatar rounded\"/>\r\n                        </a>\r\n                        <div className=\"dropdown-menu dropdown-menu-right message-section\" aria-labelledby=\"profileDropdown\">\r\n                            <Link className=\"dropdown-item\" to=\"/profile\">Profile</Link>\r\n                            <Link className=\"dropdown-item\" to=\"/change-password\">Change Password</Link>\r\n                            <div className=\"dropdown-divider\"></div>\r\n                            <a href=\"#!\" className=\"dropdown-item\">Logout</a>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\n//libs\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Menubar = () => {\r\n    return(\r\n        <div id=\"main-menu\">\r\n            {/* Level 1 main menu navigation start */}\r\n            <nav className=\"horizontal-menu menu-navbar navbar navbar-expand-lg navbar-light bg-light\">\r\n                <div id=\"menubar\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" data-toggle=\"collapse\" href=\"#submenu-dashboard\" role=\"button\" aria-expanded=\"false\" aria-controls=\"submenu-dashboard\">\r\n                                Dashboard\r\n                            </a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" data-toggle=\"collapse\" href=\"#submenu-pages\" role=\"button\" aria-expanded=\"false\" aria-controls=\"submenu-pages\">\r\n                                Pages\r\n                            </a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" data-toggle=\"collapse\" href=\"#submenu-components\" role=\"button\" aria-expanded=\"false\" aria-controls=\"submenu-components\">\r\n                                Components\r\n                            </a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" data-toggle=\"collapse\" href=\"#submenu-layouts\" role=\"button\" aria-expanded=\"false\" aria-controls=\"submenu-layouts\">\r\n                                Layouts\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n            {/* Level 1 main menu navigation end */}\r\n\r\n            {/* Level 2 sub main menu navigation start */}\r\n            <div className=\"submenu\">\r\n                <div className=\"collapse\" data-parent=\"#main-menu\" id=\"submenu-dashboard\">\r\n                    <div className=\"horizontal-menu\">\r\n                        <ul>\r\n                            <li>\r\n                                <Link>Default</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link>Boxes</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"collapse\" data-parent=\"#main-menu\" id=\"submenu-pages\">\r\n                    <div className=\"horizontal-menu\">\r\n                        <div className=\"title\">\r\n                            Authorization\r\n                        </div>\r\n                        <ul>\r\n                            <li>\r\n                                <Link to=\"/page/login\">Login</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/page/signup\">Sign up</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/page/forgot-password\">Forgot Password</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/page/reset-password\">Reset Password</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"horizontal-menu pull\">\r\n                        <div className=\"title\">\r\n                            Misc\r\n                        </div>\r\n                        <ul>\r\n                            <li>\r\n                                <Link href=\"#\">FAQ</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link href=\"#\">404</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link href=\"#\">Search</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link href=\"#\">Mailing</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link href=\"#\">Pricing</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"collapse\" data-parent=\"#main-menu\" id=\"submenu-components\">\r\n                    <div className=\"horizontal-menu\">\r\n                        <ul>\r\n                            <li>\r\n                                <Link to=\"/components/box\">Box</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/components/alert\">Alert</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/components/badges\">Badges</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/components/buttons\">Buttons</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/components/forms\">Forms</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/components/cards\">Cards</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/components/breadcrumbs\">Breadcrumbs</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/components/carousel\">Carousel</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/components/charts\">Charts</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/components/collapse\">Collapse</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/components/dropdowns\">Dropdowns</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/components/tables\">Tables</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"collapse\" data-parent=\"#main-menu\" id=\"submenu-layouts\">\r\n                    <div className=\"horizontal-menu\">\r\n                        <ul>\r\n                            <li>\r\n                                <Link>full grid</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link>2 grid</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link>2 grid with top</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link>2 grid with top &amp; bottom</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* Level 2 sub main menu navigation end */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Menubar;","import React from 'react';\r\n\r\n//libs\r\nimport PropTypes from 'prop-types'; // prop types\r\n\r\nconst H4 = (props) => {\r\n    //get custom class\r\n    const customClassName = typeof props.className !== 'undefined' ? props.className : '';\r\n\r\n    //get align\r\n    const align = typeof props.align !== 'undefined' ? props.align : 'left';\r\n\r\n    return(\r\n        <h4 className={align + ' ' + customClassName}>{ props.children }</h4>\r\n    );\r\n}\r\n\r\n//prop types initialize\r\nH4.propTypes = {\r\n    className : PropTypes.string,\r\n    align : PropTypes.string\r\n}\r\n\r\nexport default H4;","//default react\r\nimport React from 'react';\r\n\r\n//libs\r\nimport PropTypes from 'prop-types'; // prop types\r\n\r\nconst Box = (props) => {\r\n    //default bootstrap col grid size\r\n    const xs = typeof props.xs !== 'undefined' ? ' col-'+props.xs : '';\r\n    const xsOffset = typeof props.xsOffset !== 'undefined' ? ' offset-'+props.xsOffset : '';\r\n\r\n    const sm = typeof props.sm !== 'undefined' ? ' col-sm-'+props.sm : '';\r\n    const smOffset = typeof props.smOffset !== 'undefined' ? ' offset-sm-'+props.smOffset : '';\r\n\r\n    const md = typeof props.md !== 'undefined' ? ' col-md-'+props.md : '';\r\n    const mdOffset = typeof props.mdOffset !== 'undefined' ? ' offset-md-'+props.mdOffset : '';\r\n\r\n    const lg = typeof props.lg !== 'undefined' ? ' col-lg-'+props.lg : '';\r\n    const lgOffset = typeof props.lgOffset !== 'undefined' ? ' offset-lg-'+props.lgOffset : '';\r\n\r\n    //get custom class\r\n    const customClassName = typeof props.className !== 'undefined' ? props.className : '';\r\n\r\n    return(\r\n        <div className={'custom-col'+ xs + xsOffset + sm + smOffset + md + mdOffset + lg + lgOffset + \" \"+customClassName}>\r\n            <div className=\"box\">\r\n                { props.children }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n//prop types initialize\r\nBox.propTypes = {\r\n    className: PropTypes.string,\r\n    xs: PropTypes.number,\r\n    xsOffset: PropTypes.number,\r\n    sm: PropTypes.number,\r\n    smOffset: PropTypes.number,\r\n    md: PropTypes.number,\r\n    mdOffset: PropTypes.number,\r\n    lg: PropTypes.number,\r\n    lgOffset: PropTypes.number,\r\n}\r\n\r\nexport default Box;","import React from 'react';\r\n\r\n//libs\r\nimport PropTypes from 'prop-types'; // prop types\r\n\r\nconst BoxTitle = (props) => {\r\n    //get align\r\n    const align = typeof props.align !== 'undefined' ? props.align : 'left';\r\n\r\n    return(\r\n        <div className={align + \" box-title-container\"}>\r\n            <div className=\"box-title\">\r\n                <i className={props.icon}></i> { props.label }\r\n            </div>\r\n            <div className=\"box-subtitle\">\r\n                { props.subLabel }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n//prop types initialize\r\nBoxTitle.propTypes = {\r\n    label: PropTypes.string,\r\n    subLabel: PropTypes.string,\r\n    align: PropTypes.string,\r\n    icon: PropTypes.string\r\n}\r\n\r\nexport default BoxTitle;","import React from 'react';\r\n\r\nconst Container = (props) => {\r\n    return(\r\n        <div className=\"container custom-container\">\r\n            { props.children }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Container;","import React from 'react';\r\n\r\nconst Row = (props) => {\r\n    return(\r\n        <div className=\"row custom-row\">\r\n            { props.children }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Row;","//default react\r\nimport React from 'react';\r\n\r\n//libs\r\nimport PropTypes from 'prop-types'; // prop types\r\n\r\nconst Col = (props) => {\r\n    //default bootstrap col grid size\r\n    const xs = typeof props.xs !== 'undefined' ? ' col-'+props.xs : '';\r\n    const xsOffset = typeof props.xsOffset !== 'undefined' ? ' offset-'+props.xsOffset : '';\r\n\r\n    const sm = typeof props.sm !== 'undefined' ? ' col-sm-'+props.sm : '';\r\n    const smOffset = typeof props.smOffset !== 'undefined' ? ' offset-sm-'+props.smOffset : '';\r\n\r\n    const md = typeof props.md !== 'undefined' ? ' col-md-'+props.md : '';\r\n    const mdOffset = typeof props.mdOffset !== 'undefined' ? ' offset-md-'+props.mdOffset : '';\r\n\r\n    const lg = typeof props.lg !== 'undefined' ? ' col-lg-'+props.lg : '';\r\n    const lgOffset = typeof props.lgOffset !== 'undefined' ? ' offset-lg-'+props.lgOffset : '';\r\n\r\n    //get custom class\r\n    const customClassName = typeof props.className !== 'undefined' ? props.className : '';\r\n\r\n    return(\r\n        <div className={xs + xsOffset + sm + smOffset + md + mdOffset + lg + lgOffset + \" \"+customClassName}>\r\n            { props.children }\r\n        </div>\r\n    );\r\n}\r\n\r\n//prop types initialize\r\nCol.propTypes = {\r\n    className: PropTypes.string,\r\n    xs: PropTypes.number,\r\n    sm: PropTypes.number,\r\n    md: PropTypes.number,\r\n    lg: PropTypes.number\r\n}\r\n\r\nexport default Col;","import React from 'react';\r\n\r\n//libs\r\nimport PropTypes from 'prop-types'; // prop types\r\n\r\nconst Alert = (props) => {\r\n    //get alert type\r\n    const alertType = typeof props.type !== 'undefined' ? props.type : '';\r\n\r\n    //get alert message\r\n    const alertMessage = typeof props.message !== 'undefined' ? props.message : '';\r\n\r\n    //get alert icon\r\n    const withIcon = typeof props.icon !== 'undefined' ? props.icon : false;\r\n    let alertIcon = '';\r\n    if(withIcon){\r\n        switch(alertType.toLowerCase()){\r\n            case 'success':\r\n                alertIcon = 'fa fa-check-circle'\r\n                break;\r\n            case 'danger':\r\n                alertIcon = 'fa fa-exclamation'\r\n                break;\r\n            case 'warning':\r\n                alertIcon = 'fa fa-info-circle'\r\n                break;\r\n            case 'primary':\r\n                alertIcon = 'fa fa-star'\r\n                break;\r\n            case 'info':\r\n                alertIcon = 'fa fa-paper-plane'\r\n                break;\r\n            default:\r\n                alertIcon = '';\r\n                break;\r\n        }\r\n    }\r\n\r\n    //get custom class\r\n    const customClassName = typeof props.className !== 'undefined' ? props.className : '';\r\n\r\n    return(\r\n        <div className={\"custom-alert alert alert-\"+alertType+\" \" + customClassName} role=\"alert\">\r\n            { withIcon ? (\r\n                <div className=\"alert-icon\">\r\n                    <i className={alertIcon}></i>\r\n                </div>\r\n            ) : '' }\r\n            <div className=\"alert-message\">\r\n                { alertMessage }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n//prop types initialize\r\nAlert.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.string,\r\n    type: PropTypes.string,\r\n    icon: PropTypes.bool\r\n}\r\n\r\nexport default Alert;","import React from 'react';\r\n\r\n//libs\r\nimport PropTypes from 'prop-types'; // prop types\r\n\r\nconst Badge = (props) => {\r\n    //get badge type\r\n    const badgeType = typeof props.type !== 'undefined' ? props.type : '';\r\n\r\n    //get badge message\r\n    const badgeMessage = typeof props.message !== 'undefined' ? props.message : '';\r\n\r\n    //get badge icon\r\n    const badgeIcon = typeof props.icon !== 'undefined' ? props.icon : '';\r\n\r\n    //get badge image\r\n    const badgeImage = typeof props.image !== 'undefined' ? props.image : '';\r\n\r\n    //get custom class\r\n    const customClassName = typeof props.className !== 'undefined' ? props.className : '';\r\n\r\n    return(\r\n        <div className={\"custom-badge badge badge-pill badge-\"+badgeType+\" \"+customClassName}>\r\n            {/* Badge Image */}\r\n            { badgeImage !== '' ? (\r\n                <div className=\"image\">\r\n                    <img src={badgeImage} alt={\"\"}/>\r\n                </div>\r\n            ) : '' }\r\n\r\n            {/* Badge Label */}\r\n            <span className=\"badge-message\">\r\n                { badgeMessage }\r\n            </span>\r\n\r\n            {/* Badge Icon */}\r\n            { badgeIcon !== '' ? (\r\n                <i className={'icon '+badgeIcon}></i>\r\n            ) : '' }\r\n        </div>\r\n    );\r\n}\r\n\r\n//prop types initialize\r\nBadge.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.string,\r\n    type: PropTypes.string,\r\n    icon: PropTypes.string\r\n}\r\n\r\nexport default Badge;","import React from 'react';\r\n\r\n//libs\r\nimport PropTypes from 'prop-types'; // prop types\r\n\r\nconst Button = (props) => {\r\n    //get label\r\n    const isLabelExist = typeof props.label !== 'undefined' ? true : false;\r\n\r\n    //get button outlined\r\n    const inputButtonOutlined = typeof props.isOutlined !== 'undefined' ? props.isOutlined : false;\r\n\r\n    //get button full width\r\n    const isFull = typeof props.isFull !== 'undefined' ? props.isFull : false;\r\n\r\n    //get button type\r\n    let buttonBehaviorType = typeof props.type !== 'undefined' ? props.type : 'button';\r\n    if(buttonBehaviorType!=='submit'){\r\n        buttonBehaviorType = 'button';\r\n    }\r\n\r\n    //get button color\r\n    const inputButtonType = typeof props.color !== 'undefined' ? props.color : ' btn-primary';\r\n    let useAnotherColor = false;\r\n    let anotherColor = '';\r\n    let buttonType;\r\n    switch(inputButtonType){\r\n        case 'success':\r\n            buttonType = 'btn-success'\r\n            break;\r\n        case 'danger':\r\n            buttonType = 'btn-danger'\r\n            break;\r\n        case 'warning':\r\n            buttonType = 'btn-warning'\r\n            break;\r\n        case 'primary':\r\n            buttonType = 'btn-primary'\r\n            break;\r\n        case 'info':\r\n            buttonType = 'btn-info'\r\n            break;\r\n        default:\r\n            buttonType = 'btn-primary';\r\n            useAnotherColor = true;\r\n            anotherColor = props.color;\r\n            break;\r\n    }\r\n    //check for outline\r\n    buttonType = inputButtonOutlined ? (buttonType.replace('-', '-outline-')) : buttonType;\r\n    //add space between class\r\n    buttonType = ' ' + buttonType;\r\n\r\n    //get button size\r\n    const inputButtonSize = typeof props.size !== 'undefined' ? props.size : ' btn-sm';\r\n    let buttonSize;\r\n    switch(inputButtonSize){\r\n        case 'small':\r\n            buttonSize = 'btn-sm'\r\n            break;\r\n        case 'medium':\r\n            buttonSize = 'btn-md'\r\n            break;\r\n        case 'large':\r\n            buttonSize = 'btn-lg'\r\n            break;\r\n        default:\r\n            buttonSize = 'btn-md'\r\n            break;\r\n    }\r\n    //add space between class\r\n    buttonSize = ' ' + buttonSize;\r\n\r\n    //get is rounded button\r\n    const isButtonRounded = typeof props.isRounded !== 'undefined' ? (props.isRounded ? ' rounded' : '') : '';\r\n\r\n    //get custom class\r\n    const customClassName = typeof props.className !== 'undefined' ? props.className : '';\r\n\r\n    //get button icon\r\n    const buttonIcon = typeof props.icon !== 'undefined' ? props.icon : '';\r\n\r\n    let customStyle = {};\r\n    if(useAnotherColor){\r\n        customStyle = {\r\n            backgroundColor: anotherColor\r\n        }\r\n    }\r\n\r\n    return(\r\n        <button style={customStyle} type={buttonBehaviorType} onClick={props.handleClick} className={\"custom-button btn\"+ buttonType + buttonSize + isButtonRounded + (isFull ? \" full\" : \"\") + \" \" + customClassName}>\r\n            {/* check if use icon */}\r\n            { buttonIcon !== '' ? (<i className={(isLabelExist ? 'pad ' : '')+'icon '+ buttonIcon}></i>) : '' }\r\n            \r\n            {/* show button label */}\r\n            { props.label }\r\n        </button>\r\n    );\r\n}\r\n\r\n//prop types initialize\r\nButton.propTypes = {\r\n    className: PropTypes.string,\r\n    icon: PropTypes.string,\r\n    type: PropTypes.string,\r\n    color: PropTypes.string,\r\n    size: PropTypes.string,\r\n    label: PropTypes.string,\r\n    isEnable: PropTypes.bool,\r\n    isOutlined: PropTypes.bool,\r\n    isRounded: PropTypes.bool,\r\n    isFull: PropTypes.bool,\r\n    handleClick: PropTypes.func,\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\n\r\n//libs\r\nimport PropTypes from 'prop-types'; // prop types\r\n\r\nconst Form = (props) => {\r\n    //get custom class\r\n    const customClassName = typeof props.className !== 'undefined' ? props.className : '';\r\n\r\n    return(\r\n        <form onSubmit={props.handleSubmit} className={customClassName}>\r\n            { props.children }\r\n        </form>\r\n    );\r\n}\r\n\r\n//prop types initialize\r\nForm.propTypes = {\r\n    className : PropTypes.string,\r\n    handleSubmit : PropTypes.func,\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\n//libs\r\nimport PropTypes from 'prop-types'; // prop types\r\n\r\nconst FormGroup = (props) => {\r\n    //get custom class\r\n    const isRow = typeof props.isRow !== 'undefined' ? props.isRow : false;\r\n\r\n    return(\r\n        <div className={'form-group'+ (isRow ? ' row' : '')}>\r\n            { props.children }\r\n        </div>\r\n    );\r\n}\r\n\r\n//prop types initialize\r\nFormGroup.propTypes = {\r\n    isRow : PropTypes.bool\r\n}\r\n\r\nexport default FormGroup;","import React, { useState } from 'react';\r\n\r\n//libs\r\nimport PropTypes from 'prop-types'; // prop types\r\n\r\nconst Input = (props) => {\r\n    //get custom class\r\n    const customClassName = typeof props.className !== 'undefined' ? props.className : '';\r\n\r\n    //get type\r\n    let inputType = typeof props.type !== 'undefined' ? props.type : 'text';\r\n    const [type, setType] = useState(inputType);\r\n    \r\n    //get name\r\n    const inputName = typeof props.name !== 'undefined' ? props.name : '';\r\n\r\n    //get id\r\n    const inputId = typeof props.id !== 'undefined' ? props.id : 'text';\r\n\r\n    //get maxLength\r\n    const maxLength = typeof props.maxLength !== 'undefined' ? props.maxLength : 9999;\r\n    const [currentLength, setCurrentLength] = useState(0);\r\n\r\n    //get pattern\r\n    let pattern = typeof props.pattern !== 'undefined' ? props.pattern : '';\r\n\r\n    //get auto complete\r\n    const autoComplete = typeof props.autoComplete !== 'undefined' ? props.autoComplete : false;\r\n\r\n    //get required\r\n    const isRequired = typeof props.required !== 'undefined' ? props.required : false;\r\n\r\n    //get is valid\r\n    const isValid = typeof props.isValid !== 'undefined' ? (props.isValid ? 'valid ' : 'invalid ') : ' ';\r\n\r\n    //get message\r\n    let message = typeof props.message !== 'undefined' ? props.message : '';\r\n\r\n    return(\r\n        <div className=\"custom-form-control\">\r\n            { message !== '' ? (\r\n                <div className={\"message \" + isValid}>\r\n                    { message }\r\n                </div>\r\n            ) : '' }\r\n            <input \r\n                className={'form-control ' + isValid + customClassName}\r\n                type={type}\r\n                name={inputName}\r\n                id={inputId}\r\n                value={props.value}\r\n                maxLength={maxLength}\r\n                { ...{ required : isRequired } }\r\n                { ...{ pattern : (pattern==='' ? false : pattern) } }\r\n                placeholder={props.placeholder}\r\n                autoComplete={(autoComplete ? \"on\" : \"off\")}\r\n                onChange={props.handleChange}\r\n                onKeyUp={(e) => {\r\n                    // custom handle change\r\n                    if(maxLength!==9999){\r\n                        setCurrentLength(e.target.value.length);\r\n                    }\r\n                }}\r\n                />\r\n\r\n            {/* password type */}\r\n            { inputType.toLowerCase() === 'password' ? (\r\n                <div className=\"icon\">\r\n                    <i className={\"fa \" + (type.toLowerCase()==='password' ? \"fa-eye\" : \"fa-eye-slash\") } onClick={() => {\r\n                        inputType = type.toLowerCase()==='password' ? 'text' : 'password';\r\n                        setType(inputType);\r\n                    }}></i>\r\n                </div>\r\n            ) : '' }\r\n\r\n            { maxLength !== 9999 ? (\r\n                <div className=\"right-help\">\r\n                    { currentLength } / { maxLength }\r\n                </div>\r\n            ) : '' }\r\n        </div>\r\n    );\r\n}\r\n\r\n//prop types initialize\r\nInput.propTypes = {\r\n    className : PropTypes.string,\r\n    value : PropTypes.any,\r\n    type : PropTypes.string,\r\n    name : PropTypes.string,\r\n    id : PropTypes.string,\r\n    maxLength : PropTypes.number,\r\n    autoComplete : PropTypes.bool,\r\n    required : PropTypes.bool,\r\n    pattern : PropTypes.string,\r\n    placeholder : PropTypes.string,\r\n    handleChange : PropTypes.func,\r\n    isValid : PropTypes.bool,\r\n    message : PropTypes.string,\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\n\r\n//libs\r\nimport PropTypes from 'prop-types'; // prop types\r\n\r\nconst Select = (props) => {\r\n    //get custom class\r\n    const customClassName = typeof props.className !== 'undefined' ? props.className : '';\r\n    \r\n    //get name\r\n    const inputName = typeof props.name !== 'undefined' ? props.name : '';\r\n\r\n    //get placeholder\r\n    const placeholder = typeof props.placeholder !== 'undefined' ? props.placeholder : '';\r\n\r\n    //get id\r\n    const inputId = typeof props.id !== 'undefined' ? props.id : 'text';\r\n\r\n    //get required\r\n    const isRequired = typeof props.required !== 'undefined' ? props.required : false;\r\n\r\n    //get is valid\r\n    const isValid = typeof props.isValid !== 'undefined' ? (props.isValid ? 'valid ' : 'invalid ') : ' ';\r\n\r\n    //get message\r\n    let message = typeof props.message !== 'undefined' ? props.message : '';\r\n\r\n    return(\r\n        <div className=\"custom-form-control\">\r\n            { message !== '' ? (\r\n                <div className={\"message \" + isValid}>\r\n                    { message }\r\n                </div>\r\n            ) : '' }\r\n            <select \r\n                className={'form-control ' +  isValid + customClassName}\r\n                name={inputName}\r\n                id={inputId}\r\n                { ...{ required : isRequired } }\r\n                onChange={props.handleChange}\r\n                >\r\n                    { placeholder!=='' ? (\r\n                        <option value=\"\">{ placeholder }</option>\r\n                    ) : '' }\r\n                    {props.children}\r\n            </select>\r\n        </div>\r\n    );\r\n}\r\n\r\n//prop types initialize\r\nSelect.propTypes = {\r\n    className : PropTypes.string,\r\n    name : PropTypes.string,\r\n    id : PropTypes.string,\r\n    placeholder : PropTypes.string,\r\n    required : PropTypes.bool,\r\n    handleChange : PropTypes.func,\r\n    isValid : PropTypes.bool,\r\n    message : PropTypes.string,\r\n}\r\n\r\nexport default Select;","import React, { useState } from 'react';\r\n\r\n//libs\r\nimport PropTypes from 'prop-types'; // prop types\r\n\r\nconst Textarea = (props) => {\r\n    //get custom class\r\n    const customClassName = typeof props.className !== 'undefined' ? props.className : '';\r\n    \r\n    //get name\r\n    const inputName = typeof props.name !== 'undefined' ? props.name : '';\r\n\r\n    //get id\r\n    const inputId = typeof props.id !== 'undefined' ? props.id : 'text';\r\n\r\n    //get maxLength\r\n    const maxLength = typeof props.maxLength !== 'undefined' ? props.maxLength : 9999;\r\n    const [currentLength, setCurrentLength] = useState(0);\r\n\r\n    //get pattern\r\n    let pattern = typeof props.pattern !== 'undefined' ? props.pattern : '';\r\n\r\n    //get auto complete\r\n    const autoComplete = typeof props.autoComplete !== 'undefined' ? props.autoComplete : false;\r\n\r\n    //get required\r\n    const isRequired = typeof props.required !== 'undefined' ? props.required : false;\r\n\r\n    //get is valid\r\n    const isValid = typeof props.isValid !== 'undefined' ? (props.isValid ? 'valid ' : 'invalid ') : ' ';\r\n\r\n    //get message\r\n    let message = typeof props.message !== 'undefined' ? props.message : '';\r\n\r\n    return(\r\n        <div className=\"custom-form-control textarea\">\r\n            { message !== '' ? (\r\n                <div className={\"message \" + isValid}>\r\n                    { message }\r\n                </div>\r\n            ) : '' }\r\n            <textarea \r\n                className={'form-control ' + isValid + customClassName}\r\n                type=\"textarea\"\r\n                name={inputName}\r\n                id={inputId}\r\n                maxLength={maxLength}\r\n                { ...{ required : isRequired } }\r\n                { ...{ pattern : (pattern==='' ? 'false' : pattern) } }\r\n                placeholder={props.placeholder}\r\n                autoComplete={(autoComplete ? \"on\" : \"off\")}\r\n                onChange={props.handleChange}\r\n                onKeyUp={(e) => {\r\n                    // custom handle change\r\n                    if(maxLength!==9999){\r\n                        setCurrentLength(e.target.value.length);\r\n                    }\r\n                }}\r\n                >\r\n                    {props.value}\r\n            </textarea>\r\n\r\n            { maxLength !== 9999 ? (\r\n                <div className=\"right-help\">\r\n                    { currentLength } / { maxLength }\r\n                </div>\r\n            ) : '' }\r\n        </div>\r\n    );\r\n}\r\n\r\n//prop types initialize\r\nTextarea.propTypes = {\r\n    className : PropTypes.string,\r\n    value: PropTypes.any,\r\n    name : PropTypes.string,\r\n    id : PropTypes.string,\r\n    maxLength : PropTypes.number,\r\n    autoComplete : PropTypes.bool,\r\n    required : PropTypes.bool,\r\n    pattern : PropTypes.string,\r\n    placeholder : PropTypes.string,\r\n    handleChange : PropTypes.func,\r\n    isValid : PropTypes.bool,\r\n    message : PropTypes.string,\r\n}\r\n\r\nexport default Textarea;","import React from 'react';\r\n\r\n//libs\r\nimport PropTypes from 'prop-types'; // prop types\r\n\r\nconst Checkbox = (props) => {\r\n    //get custom class\r\n    const customClassName = typeof props.className !== 'undefined' ? props.className : '';\r\n\r\n    //get label\r\n    const label = typeof props.label !== 'undefined' ? props.label : '';\r\n\r\n    //get is circular\r\n    const isCircular = typeof props.isCircular !== 'undefined' ? props.isCircular : false;\r\n\r\n    //get checked\r\n    const isChecked = typeof props.isChecked !== 'undefined' ? props.isChecked : false;\r\n\r\n    return(\r\n        <span className={\"custom-checkbox \" + customClassName}>\r\n            <label className=\"checkbox-label\">\r\n                <input type=\"checkbox\" \r\n                    onChange={props.handleChange}\r\n                    { ...{ checked : isChecked } }\r\n                    />\r\n                <span className={\"checkbox-custom \" + (isCircular ? 'circular' : 'rectangular')}></span>\r\n            </label>\r\n            <span className=\"label\">\r\n                { label }\r\n            </span>\r\n        </span>\r\n    );\r\n}\r\n\r\n//prop types initialize\r\nCheckbox.propTypes = {\r\n    className : PropTypes.string,\r\n    handleChange: PropTypes.func,\r\n    label: PropTypes.string,\r\n    isChecked : PropTypes.bool,\r\n    isCircular: PropTypes.bool\r\n}\r\n\r\n\r\nexport default Checkbox;","import React from 'react';\r\n\r\n//libs\r\nimport PropTypes from 'prop-types'; // prop types\r\nimport CurrencyFormat  from 'react-currency-format';\r\n\r\nconst IconCard = (props) => {\r\n    //get custom class\r\n    const customClassName = typeof props.className !== 'undefined' ? props.className : '';\r\n\r\n    //get label\r\n    const label = typeof props.label !== 'undefined' ? props.label : '';\r\n\r\n    //get icon\r\n    const icon = typeof props.icon !== 'undefined' ? props.icon : '';\r\n\r\n    //get number\r\n    const number = typeof props.number !== 'undefined' ? props.number : '';\r\n\r\n    //get number\r\n    const align = typeof props.align !== 'undefined' ? props.align : '';\r\n\r\n    //get button outlined\r\n    const isButtonWavy = typeof props.isWavy !== 'undefined' ? props.isWavy : false;\r\n\r\n    return(\r\n        <div className={'custom-icon-card '+align+' '+customClassName}>\r\n            {/* main content */}\r\n            <div className={\"icon-card-body \"+(isButtonWavy ? 'wavy' : '')}>\r\n                { icon !== '' ? (\r\n                <div className=\"icon\">\r\n                    <i className={ icon }></i>\r\n                </div>) : '' }\r\n                \r\n                <div className=\"label\">\r\n                    { label.toUpperCase() }\r\n                </div>\r\n                <div className=\"number\">\r\n                    <CurrencyFormat value={ number } displayType={'text'} thousandSeparator={true}/>\r\n                </div>\r\n            </div>\r\n\r\n            {/* wave effect */}\r\n            { isButtonWavy ? (\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\"><path fillOpacity=\"0.2\" d=\"M0,192L6.5,181.3C13,171,26,149,39,149.3C51.9,149,65,171,78,192C90.8,213,104,235,117,224C129.7,213,143,171,156,165.3C168.6,160,182,192,195,181.3C207.6,171,221,117,234,80C246.5,43,259,21,272,16C285.4,11,298,21,311,53.3C324.3,85,337,139,350,138.7C363.2,139,376,85,389,58.7C402.2,32,415,32,428,42.7C441.1,53,454,75,467,90.7C480,107,493,117,506,154.7C518.9,192,532,256,545,277.3C557.8,299,571,277,584,266.7C596.8,256,610,256,623,234.7C635.7,213,649,171,662,170.7C674.6,171,688,213,701,240C713.5,267,726,277,739,261.3C752.4,245,765,203,778,176C791.4,149,804,139,817,149.3C830.3,160,843,192,856,181.3C869.2,171,882,117,895,101.3C908.1,85,921,107,934,144C947,181,960,235,973,234.7C985.9,235,999,181,1012,176C1024.9,171,1038,213,1051,218.7C1063.8,224,1077,192,1090,154.7C1102.7,117,1116,75,1129,74.7C1141.6,75,1155,117,1168,160C1180.5,203,1194,245,1206,272C1219.5,299,1232,309,1245,304C1258.4,299,1271,277,1284,234.7C1297.3,192,1310,128,1323,117.3C1336.2,107,1349,149,1362,144C1375.1,139,1388,85,1401,64C1414.1,43,1427,53,1434,58.7L1440,64L1440,320L1433.5,320C1427,320,1414,320,1401,320C1388.1,320,1375,320,1362,320C1349.2,320,1336,320,1323,320C1310.3,320,1297,320,1284,320C1271.4,320,1258,320,1245,320C1232.4,320,1219,320,1206,320C1193.5,320,1181,320,1168,320C1154.6,320,1142,320,1129,320C1115.7,320,1103,320,1090,320C1076.8,320,1064,320,1051,320C1037.8,320,1025,320,1012,320C998.9,320,986,320,973,320C960,320,947,320,934,320C921.1,320,908,320,895,320C882.2,320,869,320,856,320C843.2,320,830,320,817,320C804.3,320,791,320,778,320C765.4,320,752,320,739,320C726.5,320,714,320,701,320C687.6,320,675,320,662,320C648.6,320,636,320,623,320C609.7,320,597,320,584,320C570.8,320,558,320,545,320C531.9,320,519,320,506,320C493,320,480,320,467,320C454.1,320,441,320,428,320C415.1,320,402,320,389,320C376.2,320,363,320,350,320C337.3,320,324,320,311,320C298.4,320,285,320,272,320C259.5,320,246,320,234,320C220.5,320,208,320,195,320C181.6,320,169,320,156,320C142.7,320,130,320,117,320C103.8,320,91,320,78,320C64.9,320,52,320,39,320C25.9,320,13,320,6,320L0,320Z\"></path></svg>\r\n            ) : '' }\r\n        </div>\r\n    );\r\n}\r\n\r\n//prop types initialize\r\nIconCard.propTypes = {\r\n    className: PropTypes.string,\r\n    isWavy: PropTypes.bool,\r\n    align: PropTypes.string,\r\n    label: PropTypes.string,\r\n    icon: PropTypes.string,\r\n    number: PropTypes.number,\r\n}\r\n\r\nexport default IconCard;","import React from 'react';\r\n\r\n//libs\r\nimport PropTypes from 'prop-types'; // prop types\r\n\r\nconst UserCard = (props) => {\r\n    //get custom class\r\n    const customClassName = typeof props.className !== 'undefined' ? props.className : '';\r\n\r\n    //get avatar\r\n    const avatar = typeof props.avatar !== 'undefined' ? props.avatar : '';\r\n\r\n    //get background\r\n    const background = typeof props.background !== 'undefined' ? props.background : '';\r\n\r\n    //get title\r\n    const title = typeof props.title !== 'undefined' ? props.title : '';\r\n\r\n    //get sub title\r\n    const subTitle = typeof props.subTitle !== 'undefined' ? props.subTitle : '';\r\n\r\n    //get button outlined\r\n    const isHorizontal = typeof props.isHorizontal !== 'undefined' ? props.isHorizontal : false;\r\n\r\n    return(\r\n        <div className={'custom-user-card ' + (isHorizontal ? 'horizontal ' : 'vertical ') + customClassName}>\r\n            { isHorizontal ? (\r\n                // horizontal\r\n                <div>\r\n                    <div className=\"frame\">\r\n                        <img alt={\"\"} src={avatar}/>\r\n                    </div>\r\n                    <div className=\"user-card-left\">\r\n                        <div className=\"title\">\r\n                            { title }\r\n                        </div>\r\n                        <div className=\"sub-title\">\r\n                            { subTitle }\r\n                        </div>\r\n                        <div className=\"user-card-child\">\r\n                            { props.children }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                // vertical\r\n                <div>\r\n                    <div className=\"top-bg\">\r\n                        { background!=='' ? (\r\n                            <img alt={\"\"} src={background}/>\r\n                        ) : '' }\r\n                    </div>\r\n                    <div className=\"frame\">\r\n                        <img alt={\"\"} src={avatar}/>\r\n                    </div>\r\n                    <div className=\"title\">\r\n                        { title }\r\n                    </div>\r\n                    <div className=\"sub-title\">\r\n                        { subTitle }\r\n                    </div>\r\n                    <div className=\"user-card-child\">\r\n                        { props.children }\r\n                    </div>\r\n                </div>\r\n            ) }\r\n            \r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\n//prop types initialize\r\nUserCard.propTypes = {\r\n    className: PropTypes.string,\r\n    avatar: PropTypes.string,\r\n    background: PropTypes.string,\r\n    title: PropTypes.string,\r\n    subTitle: PropTypes.string,\r\n    isHorizontal: PropTypes.bool,\r\n}\r\n\r\nexport default UserCard;","import React from 'react';\r\n\r\n//libs\r\nimport PropTypes from 'prop-types'; // prop types\r\n\r\nconst ImageCard = (props) => {\r\n    //get custom class\r\n    const customClassName = typeof props.className !== 'undefined' ? props.className : '';\r\n\r\n    //get image\r\n    const image = typeof props.image !== 'undefined' ? props.image : '';\r\n\r\n    //get image\r\n    const isOverlay = typeof props.isOverlay !== 'undefined' ? props.isOverlay : false;\r\n\r\n    return(\r\n        <div className={'custom-image-card card ' + (isOverlay ? 'overlay ' : '') + customClassName}>\r\n            <img src={image} class=\"card-img-top\" alt={\"\"} />\r\n            <div class=\"card-body\">\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n//prop types initialize\r\nImageCard.propTypes = {\r\n    className: PropTypes.string,\r\n    image: PropTypes.string,\r\n    isOverlay: PropTypes.bool,\r\n}\r\n\r\nexport default ImageCard;","import React from 'react';\r\n\r\nconst ImageCardTitle = (props) => {\r\n    return(\r\n        <h5 class=\"card-title\">{ props.children }</h5>\r\n    );\r\n}\r\n\r\nexport default ImageCardTitle;","import React from 'react';\r\n\r\nconst ImageCardSubTitle = (props) => {\r\n    return(\r\n        <h5 class=\"card-subtitle\">{ props.children }</h5>\r\n    );\r\n}\r\n\r\nexport default ImageCardSubTitle;","import React from 'react';\r\n\r\n//libs\r\nimport PropTypes from 'prop-types'; // prop types\r\n\r\nconst ImageCardDescription = (props) => {\r\n    let maxLength = 100;\r\n    let description = '';\r\n\r\n    //get maxLength\r\n    maxLength = typeof props.maxLength !== 'undefined' ? props.maxLength : maxLength;\r\n\r\n    //get description\r\n    if(typeof props.children !== 'undefined'){\r\n        description = props.children.length > maxLength ? props.children.slice(0, maxLength)+'...' : props.children;\r\n    }\r\n\r\n    return(\r\n        <p class=\"card-text\">{ description }</p>\r\n    );\r\n}\r\n\r\n//prop types initialize\r\nImageCardDescription.propTypes = {\r\n    maxLength: PropTypes.number\r\n}\r\n\r\nexport default ImageCardDescription;","import React from 'react';\r\n\r\n//libs\r\nimport PropTypes from 'prop-types'; // prop types\r\n\r\nconst ProductCard = (props) => {\r\n    //get custom class\r\n    const customClassName = typeof props.className !== 'undefined' ? props.className : '';\r\n\r\n    return(\r\n        <div className={'custom-product-card ' + customClassName}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\n//prop types initialize\r\nProductCard.propTypes = {\r\n    className: PropTypes.string\r\n}\r\n\r\nexport default ProductCard;","import React from 'react';\r\n\r\nconst ProductCardName = (props) => {\r\n    return(\r\n        <div className=\"product-card-name\">\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductCardName;","import React from 'react';\r\n\r\n//libs\r\nimport PropTypes from 'prop-types'; // prop types\r\n\r\nconst ProductCardImage = (props) => {\r\n    //get custom class\r\n    const image = typeof props.image !== 'undefined' ? props.image : '';\r\n\r\n    return(\r\n        <div className={'product-card-image'}>\r\n            <img src={image} className=\"img-fluid\" alt={\"\"}/>\r\n        </div>\r\n    );\r\n}\r\n\r\n//prop types initialize\r\nProductCardImage.propTypes = {\r\n    image: PropTypes.string\r\n}\r\n\r\nexport default ProductCardImage;","import React from 'react';\r\n\r\n//libs\r\nimport PropTypes from 'prop-types'; // prop types\r\nimport CurrencyFormat  from 'react-currency-format';\r\n\r\nconst ProductCardPrice = (props) => {\r\n    //get currency\r\n    const currency = typeof props.currency !== 'undefined' ? props.currency : '$ ';\r\n\r\n    //get price\r\n    const price = typeof props.price !== 'undefined' ? props.price : 0;\r\n\r\n    //get after discount price\r\n    const afterDiscountPrice = typeof props.price !== 'undefined' ? props.afterDiscountPrice : 0;\r\n\r\n    return(\r\n        <div className=\"product-card-price\">\r\n            <div className={'normal-price '+(afterDiscountPrice > 0 ? 'discount' : '')}>\r\n                {currency} <CurrencyFormat value={ price } displayType={'text'} thousandSeparator={true}/>\r\n            </div>\r\n            { afterDiscountPrice > 0 ? (\r\n                <div className=\"discount-price\">\r\n                    {currency} <CurrencyFormat value={ afterDiscountPrice } displayType={'text'} thousandSeparator={true}/>\r\n                </div>\r\n            ): '' }\r\n        </div>\r\n    );\r\n}\r\n\r\n//prop types initialize\r\nProductCardPrice.propTypes = {\r\n    currency: PropTypes.string,\r\n    price: PropTypes.number,\r\n    afterDiscountPrice: PropTypes.number,\r\n}\r\n\r\nexport default ProductCardPrice;","import React from 'react';\r\n\r\n//libs\r\nimport PropTypes from 'prop-types'; // prop types\r\n\r\nconst ProductCardDescription = (props) => {\r\n    let maxLength = 100;\r\n    let description = '';\r\n\r\n    //get maxLength\r\n    maxLength = typeof props.maxLength !== 'undefined' ? props.maxLength : maxLength;\r\n\r\n    //get description\r\n    if(typeof props.children !== 'undefined'){\r\n        description = props.children.length > maxLength ? props.children.slice(0, maxLength)+'...' : props.children;\r\n    }\r\n\r\n    return(\r\n        <p class=\"product-card-description\">{ description }</p>\r\n    );\r\n}\r\n\r\n//prop types initialize\r\nProductCardDescription.propTypes = {\r\n    maxLength: PropTypes.number\r\n}\r\n\r\nexport default ProductCardDescription;","import React from 'react';\r\n\r\nconst ProductCardCategory = (props) => {\r\n    return(\r\n        <div className=\"product-card-category\">\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductCardCategory;","import React from 'react';\r\n\r\nconst Breadcrumb = (props) => {\r\n    return(\r\n        <nav aria-label=\"breadcrumb\">\r\n            <ol class=\"breadcrumb custom-breadcrumb\">\r\n                {props.children}\r\n            </ol>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Breadcrumb;","import React from 'react';\r\n\r\n//libs\r\nimport PropTypes from 'prop-types'; // prop types\r\n\r\nconst BreadcrumbItem = (props) => {\r\n    //get button outlined\r\n    const isActive = typeof props.isActive !== 'undefined' ? props.isActive : false;\r\n\r\n    return(\r\n        <li className={\"breadcrumb-item\"+(isActive ? ' active' : '')}>\r\n            {props.children}\r\n        </li>\r\n    );\r\n}\r\n\r\n//prop types initialize\r\nBreadcrumbItem.propTypes = {\r\n    isActive : PropTypes.bool\r\n}\r\n\r\nexport default BreadcrumbItem;","import React from 'react';\r\n\r\n//libs\r\nimport PropTypes from 'prop-types'; // prop types\r\n\r\nconst Carousel = (props) => {\r\n    //get custom class\r\n    const customClassName = typeof props.className !== 'undefined' ? props.className : '';\r\n\r\n    //get unique id\r\n    const id = typeof props.id !== 'undefined' ? props.id : 'myCarousel';\r\n\r\n    //get array of item\r\n    const items = typeof props.items !== 'undefined' ? props.items : [];\r\n\r\n    //get indicators\r\n    const indicators = typeof props.indicators !== 'undefined' ? props.indicators : true;\r\n\r\n    //get controls\r\n    const useControls = typeof props.controls !== 'undefined' ? props.controls : true;\r\n\r\n    return(\r\n        <div id={id} className={'custom-carousel carousel slide ' + customClassName} data-ride=\"carousel\">\r\n            {/* Indicators */}\r\n            {indicators ? (\r\n                <ol className=\"carousel-indicators\">\r\n                    { items.map((item, index) => (\r\n                        <li key={index} data-target={\"#\"+id} data-slide-to={index} className={index===0 ? 'active' : ''}></li>\r\n                    )) }\r\n                </ol>\r\n            ) : ''}\r\n            \r\n            {/* Main Carousel Items */}\r\n            <div className=\"carousel-inner\">\r\n                { items.map((item, index) => (\r\n                    <div onClick={item.handleClick} key={index} className={\"carousel-item\" + (index===0 ? ' active' : '') + (item.useCaption ? ' overlay' : '')}>\r\n                        <img src={item.image} className=\"d-block w-100\" alt={\"\"} />\r\n                        { item.useCaption ? (\r\n                            <div className=\"carousel-caption d-none d-md-block\">\r\n                                <h2 style={{color: item.captionColor}}>{ item.title }</h2>\r\n                                <h4 style={{color: item.captionColor}}>{ item.subTitle }</h4>\r\n                            </div>\r\n                        ) : '' }\r\n                    </div>\r\n                )) }\r\n            </div>\r\n\r\n            {/* Controls */}\r\n            { useControls ? (\r\n                <div>\r\n                    <a className=\"carousel-control-prev\" href={\"#\"+id} role=\"button\" data-slide=\"prev\">\r\n                        <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                        <span className=\"sr-only\">Previous</span>\r\n                    </a>\r\n                    <a className=\"carousel-control-next\" href={\"#\"+id} role=\"button\" data-slide=\"next\">\r\n                        <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                        <span className=\"sr-only\">Next</span>\r\n                    </a>\r\n                </div>\r\n            ) : '' }\r\n        </div>\r\n    );\r\n}\r\n\r\n//prop types initialize\r\nCarousel.propTypes = {\r\n    className: PropTypes.string,\r\n    id : PropTypes.string,\r\n    items : PropTypes.array,\r\n    indicators : PropTypes.bool,\r\n    controls : PropTypes.bool,\r\n}\r\n\r\nexport default Carousel;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Box, BoxTitle, Form, FormGroup, Input, Button, Checkbox, H4 } from '../styles';\r\n\r\nconst LoginPage = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [rememberMe, setRememberMe] = useState(false);\r\n\r\n    return(\r\n        <div>\r\n            <Box xs={12} sm={12} md={6} mdOffset={3} lg={4} lgOffset={4}>\r\n                <BoxTitle label=\"Authentication\" subLabel=\"welcome to refast admin template.\" align=\"center\"/>\r\n                <Form handleSubmit={(e) => { \r\n                    e.preventDefault();\r\n                    alert(\"Login Success, remember me: \"+rememberMe);\r\n                }}>\r\n                    <FormGroup>\r\n                        <Input \r\n                            value={email}\r\n                            required={true}\r\n                            type=\"email\" \r\n                            placeholder=\"Email\"\r\n                            handleChange={(e) => { setEmail(e.target.value) }}/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Input \r\n                            value={password}\r\n                            required={true}\r\n                            type=\"password\" \r\n                            placeholder=\"Password\"\r\n                            handleChange={(e) => { setPassword(e.target.value) }}/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Checkbox \r\n                            isChecked={rememberMe}\r\n                            handleChange={(e) => { setRememberMe(e.target.checked) }}\r\n                            label=\"remember me?\"/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Button type=\"submit\" label=\"LOGIN\" isFull={true}/>\r\n                    </FormGroup>\r\n                    <H4 align=\"center\">or login with</H4>\r\n                    <FormGroup>\r\n                        <Button type=\"button\" color=\"danger\" icon=\"fa fa-google\" label=\"GOOGLE\" isFull={true}/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Button type=\"button\" color=\"#4267B2\" icon=\"fa fa-facebook\" label=\"FACEBOOK\" isFull={true}/>\r\n                    </FormGroup>\r\n                    <H4 align=\"center\">Doesn have an account? <Link to=\"/page/signup\">Sign up Here</Link></H4>\r\n                </Form>\r\n            </Box>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginPage;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Box, BoxTitle, Form, FormGroup, Input, Button, Checkbox, H4, Textarea } from '../styles';\r\n\r\nconst SignupPage = () => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [address, setAddress] = useState('');\r\n    const [agreed, setAgreed] = useState(false);\r\n\r\n    return(\r\n        <div>\r\n            <Box xs={12} sm={12} md={8} mdOffset={2} lg={6} lgOffset={3}>\r\n                <BoxTitle label=\"Register\" subLabel=\"signup and be a member of community.\" align=\"left\"/>\r\n                <Form handleSubmit={(e) => { \r\n                    e.preventDefault();\r\n                    alert(\"Sign up success\");\r\n                }}>\r\n                    <FormGroup>\r\n                        <Input \r\n                            value={name}\r\n                            required={true}\r\n                            maxLength={50}\r\n                            type=\"text\" \r\n                            placeholder=\"Name\"\r\n                            handleChange={(e) => { setName(e.target.value) }}/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Input \r\n                            value={email}\r\n                            required={true}\r\n                            maxLength={50}\r\n                            type=\"email\" \r\n                            placeholder=\"Email\"\r\n                            handleChange={(e) => { setEmail(e.target.value) }}/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Input \r\n                            value={password}\r\n                            required={true}\r\n                            maxLength={20}\r\n                            type=\"password\" \r\n                            placeholder=\"Password\"\r\n                            handleChange={(e) => { setPassword(e.target.value) }}/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Textarea \r\n                            value={address}\r\n                            required={true}\r\n                            maxLength={150}\r\n                            placeholder=\"Address\"\r\n                            handleChange={(e) => { setAddress(e.target.value) }}/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Checkbox \r\n                            isChecked={agreed}\r\n                            handleChange={(e) => { setAgreed(e.target.checked) }}\r\n                            label=\"I agree with terms and conditions.\"/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Button type=\"submit\" label=\"Sign Up\" isFull={true}/>\r\n                    </FormGroup>\r\n                    <H4 align=\"center\">Already have an account? <Link to=\"/page/login\">Login Here</Link></H4>\r\n                </Form>\r\n            </Box>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignupPage;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Box, BoxTitle, Form, FormGroup, Input, Button, H4 } from '../styles';\r\n\r\nconst ForgotPasswordPage = () => {\r\n    const [email, setEmail] = useState('');\r\n\r\n    return(\r\n        <div>\r\n            <Box xs={12} sm={12} md={6} mdOffset={3} lg={4} lgOffset={4}>\r\n                <BoxTitle icon=\"fa fa-question-circle\" label=\"Forgot Your Password?\" subLabel=\"we will send reset password link to your email.\" align=\"center\"/>\r\n                <Form handleSubmit={(e) => { \r\n                    e.preventDefault();\r\n                    alert(\"Email sent to: \"+email);\r\n                }}>\r\n                    <FormGroup>\r\n                        <Input \r\n                            value={email}\r\n                            required={true}\r\n                            type=\"email\" \r\n                            placeholder=\"Email\"\r\n                            handleChange={(e) => { setEmail(e.target.value) }}/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Button type=\"submit\" icon=\"fa fa-paper-plane\" label=\"Send Reset Link\" isFull={true}/>\r\n                    </FormGroup>\r\n                    <H4 align=\"center\">I remember my password, <Link to=\"/page/login\">Go To Login</Link></H4>\r\n                </Form>\r\n            </Box>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ForgotPasswordPage;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Box, BoxTitle, Form, FormGroup, Input, Button, H4 } from '../styles';\r\n\r\nconst ResetPasswordPage = () => {\r\n    const [newPassword, setNewPassword] = useState('');\r\n\r\n    return(\r\n        <div>\r\n            <Box xs={12} sm={12} md={6} mdOffset={3} lg={4} lgOffset={4}>\r\n                <BoxTitle label=\"Reset Password\" subLabel=\"please enter your new password.\" align=\"center\"/>\r\n                <Form handleSubmit={(e) => { \r\n                    e.preventDefault();\r\n                    alert(\"Password has been reset.\");\r\n                }}>\r\n                    <FormGroup>\r\n                        <Input \r\n                            value={newPassword}\r\n                            required={true}\r\n                            maxLength={20}\r\n                            type=\"password\" \r\n                            placeholder=\"New Password\"\r\n                            handleChange={(e) => { setNewPassword(e.target.value) }}/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Button type=\"submit\" label=\"Reset\" isFull={true}/>\r\n                    </FormGroup>\r\n                    <H4 align=\"center\"><Link to=\"/page/login\">Go To Login Page.</Link></H4>\r\n                </Form>\r\n            </Box>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResetPasswordPage;","import React from 'react';\r\n\r\n/* Styles */\r\nimport { Box, BoxTitle, Row, Container } from './../../styles';\r\n/* Styles */\r\n\r\nconst BoxPage = () => {\r\n    return(\r\n        <div>\r\n            <div className=\"title\">\r\n                Box\r\n                <div className=\"sub-title\">\r\n                    <i className=\"fa fa-info-circle\"></i> rectangle white box with shadow.\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"body\">\r\n                <Container>\r\n                    <Row>\r\n                        <Box sm={6} md={4} lg={3}>\r\n                            small 6\r\n                            <br/>\r\n                            medium 4\r\n                            <br/>\r\n                            large 3\r\n                        </Box>\r\n                        <Box sm={6} md={8} lg={9}>\r\n                            small 6\r\n                            <br/>\r\n                            medium 6\r\n                            <br/>\r\n                            large 9\r\n                        </Box>\r\n                    </Row>\r\n                    <Row>\r\n                        <Box md={8} mdOffset={2} lg={6} lgOffset={3}>\r\n                            medium 8, offset 2\r\n                            <br/>\r\n                            large 6, offset 3\r\n                        </Box>\r\n                    </Row>\r\n                    <Row>\r\n                        <Box sm={4}>\r\n                            <BoxTitle label=\"Title and Icon\" icon=\"fa fa-bell\"/>\r\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n                        </Box>\r\n                        <Box sm={4}>\r\n                            <BoxTitle label=\"Title Only\"/>\r\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n                        </Box>\r\n                        <Box sm={4}>\r\n                            <BoxTitle icon=\"fa fa-comments\"/>\r\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n                        </Box>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BoxPage;","import React from 'react';\r\n\r\n/* Styles */\r\nimport { Box, BoxTitle, Row, Container, Alert } from './../../styles';\r\n/* Styles */\r\n\r\nconst AlertPage = () => {\r\n    return(\r\n        <div>\r\n            <div className=\"title\">\r\n                Alerts\r\n                <div className=\"sub-title\">\r\n                    <i className=\"fa fa-info-circle\"></i> show text messages with colorful background and informative icon.\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"body\">\r\n                <Container>\r\n                    <Row>\r\n                        <Box md={6}>\r\n                            <BoxTitle label=\"Alerts with icon\"/>\r\n                            <Alert type=\"success\" icon={true} message=\"Successfully transfer all data.\"/>\r\n                            <Alert type=\"danger\" icon={true} message=\"Failed to run backup.\"/>\r\n                            <Alert type=\"primary\" icon={true} message=\"John has confirmed the order.\"/>\r\n                            <Alert type=\"warning\" icon={true} message=\"Storage are running low!.\"/>\r\n                            <Alert type=\"info\" icon={true} message=\"John has confirmed the order.\"/>\r\n                        </Box>\r\n                        <Box md={6}>\r\n                            <BoxTitle label=\"Alerts without icon\"/>\r\n                            <Alert type=\"success\" message=\"Successfully transfer all data.\"/>\r\n                            <Alert type=\"danger\" message=\"Failed to run backup.\"/>\r\n                            <Alert type=\"primary\" message=\"John has confirmed the order.\"/>\r\n                            <Alert type=\"warning\" message=\"Storage are running low!.\"/>\r\n                            <Alert type=\"info\" message=\"John has confirmed the order.\"/>\r\n                        </Box>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AlertPage;","import React from 'react';\r\n\r\n/* Styles */\r\nimport { Box, BoxTitle, Row, Container, Badge } from './../../styles';\r\n/* Styles */\r\n\r\nconst BadgePage = () => {\r\n    return(\r\n        <div>\r\n            <div className=\"title\">\r\n                Badges\r\n                <div className=\"sub-title\">\r\n                    <i className=\"fa fa-info-circle\"></i> show small text with icon and image in various background color.\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"body add-spaces\">\r\n                <Container>\r\n                    <Row>\r\n                        <Box md={4}>\r\n                            <div className=\"add-spaces\">\r\n                                <BoxTitle label=\"Badge\"/>\r\n                                <Badge type=\"success\" message=\"success\"/>\r\n                                <Badge type=\"danger\" message=\"danger\"/>\r\n                                <Badge type=\"primary\" message=\"primary\"/>\r\n                                <Badge type=\"warning\" message=\"warning\"/>\r\n                                <Badge type=\"info\" message=\"info\"/>\r\n                            </div>\r\n                        </Box>\r\n                        <Box md={4}>\r\n                            <div className=\"add-spaces\">\r\n                                <BoxTitle label=\"Badge with icon\"/>\r\n                                <Badge type=\"success\" icon=\"fa fa-check-circle\" message=\"success\"/>\r\n                                <Badge type=\"danger\" icon=\"fa fa-exclamation\" message=\"danger\"/>\r\n                                <Badge type=\"primary\" icon=\"fa fa-star\" message=\"primary\"/>\r\n                                <Badge type=\"warning\" icon=\"fa fa-info-circle\" message=\"warning\"/>\r\n                                <Badge type=\"info\" icon=\"fa fa-paper-plane\" message=\"info\"/>\r\n                            </div>\r\n                        </Box>\r\n                        <Box md={4}>\r\n                            <div className=\"add-spaces\">\r\n                                <BoxTitle label=\"Badge with icon and image\"/>\r\n                                <Badge type=\"success\" icon=\"fa fa-check-circle\" image=\"/images/avatar.png\" message=\"success\"/>\r\n                                <Badge type=\"primary\" image=\"/images/avatar.png\" message=\"primary\"/>\r\n                            </div>\r\n                        </Box>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BadgePage;","import React from 'react';\r\n\r\n/* Styles */\r\nimport { Box, BoxTitle, Row, Container, Button } from './../../styles';\r\n/* Styles */\r\n\r\nconst ButtonPage = () => {\r\n    return(\r\n        <div>\r\n            <div className=\"title\">\r\n                Buttons\r\n                <div className=\"sub-title\">\r\n                    <i className=\"fa fa-info-circle\"></i> various buttons styling.\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"body\">\r\n                <Container>\r\n                    <Row>\r\n                        <Box md={4} lg={4}>\r\n                            <div className=\"add-spaces\">\r\n                                <BoxTitle label=\"Normal button\"/>\r\n                                <Button label=\"Primary\" color=\"primary\"/>\r\n                                <Button label=\"Success\" color=\"success\"/>\r\n                                <Button label=\"Danger\" color=\"danger\"/>\r\n                                <Button label=\"Warning\" color=\"warning\"/>\r\n                                <Button label=\"Info\" color=\"info\"/>\r\n                                <hr/>\r\n                                <BoxTitle label=\"Small button\"/>\r\n                                <Button label=\"Primary\" color=\"primary\" size=\"small\"/>\r\n                                <Button label=\"Success\" color=\"success\" size=\"small\"/>\r\n                                <Button label=\"Danger\" color=\"danger\" size=\"small\"/>\r\n                                <Button label=\"Warning\" color=\"warning\" size=\"small\"/>\r\n                                <Button label=\"Info\" color=\"info\" size=\"small\"/>\r\n                                <hr/>\r\n                                <BoxTitle label=\"Large button\"/>\r\n                                <Button label=\"Primary\" color=\"primary\" size=\"large\"/>\r\n                                <Button label=\"Success\" color=\"success\" size=\"large\"/>\r\n                                <Button label=\"Danger\" color=\"danger\" size=\"large\"/>\r\n                                <Button label=\"Warning\" color=\"warning\" size=\"large\"/>\r\n                                <Button label=\"Info\" color=\"info\" size=\"large\"/>\r\n                            </div>\r\n                        </Box>\r\n                        <Box md={4} lg={4}>\r\n                            <div className=\"add-spaces\">\r\n                                <BoxTitle label=\"Rounded button\"/>\r\n                                <Button label=\"Primary\" color=\"primary\" isRounded={true} size=\"small\"/>\r\n                                <Button label=\"Primary\" color=\"primary\" isRounded={true} size=\"medium\"/>\r\n                                <Button label=\"Primary\" color=\"primary\" isRounded={true} size=\"large\"/>\r\n                                <hr/>\r\n                                <BoxTitle label=\"Iconed button\"/>\r\n                                <Button label=\"Primary\" color=\"primary\" icon=\"fa fa-download\" size=\"small\"/>\r\n                                <Button label=\"Danger\" color=\"danger\" icon=\"fa fa-exclamation\" size=\"medium\"/>\r\n                                <Button label=\"Warning\" color=\"warning\" icon=\"fa fa-info-circle\" size=\"large\"/>\r\n                                <hr/>\r\n                                <BoxTitle label=\"Outlined button\"/>\r\n                                <Button label=\"Primary\" icon=\"fa fa-download\" color=\"primary\" isOutlined={true}/>\r\n                                <Button label=\"Success\" isRounded={true} color=\"success\" isOutlined={true}/>\r\n                                <Button label=\"Danger\" icon=\"fa fa-exclamation\" color=\"danger\" isRounded={true} isOutlined={true}/>\r\n                            </div>\r\n                        </Box>\r\n                        <Box md={4} lg={4}>\r\n                            <div className=\"add-spaces\">\r\n                                <BoxTitle label=\"Only Icon button\"/>\r\n                                <Button icon=\"fa fa-download\" color=\"primary\" isOutlined={true} size=\"small\"/>\r\n                                <Button icon=\"fa fa-print\" color=\"success\" isRounded={true} size=\"medium\"/>\r\n                                <Button icon=\"fa fa-github\" color=\"info\" size=\"large\"/>\r\n                                <BoxTitle label=\"Full Width button\"/>\r\n                                <Button label=\"Primary\" color=\"primary\" isOutlined={true} isFull={true} size=\"medium\"/>\r\n                                <Button label=\"Export\" icon=\"fa fa-print\" color=\"success\" isFull={true} size=\"medium\"/>\r\n                            </div>\r\n                        </Box>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ButtonPage;","import React, { useState } from 'react';\r\n\r\n/* Styles */\r\nimport { Box, Row, Container, BoxTitle, Form, FormGroup, Input, Select, Textarea, Checkbox } from './../../styles';\r\n/* Styles */\r\n\r\nconst FormsPage = () => {\r\n\r\n    // error validation\r\n    const [firstNameValidation, setFirstNameValidation] = useState({\r\n        text : '',\r\n        isValid : false,\r\n        message : '*please fill this field'\r\n    });\r\n    const [passwordValidation, setPasswordValidation] = useState({\r\n        text : '',\r\n        isValid : false,\r\n        message : '*please fill this field'\r\n    });\r\n    const [selectValidation, setSelectValidation] = useState({\r\n        text : '',\r\n        isValid : false,\r\n        message : '*please select fruit'\r\n    });\r\n    const [addressValidation, setAddressValidation] = useState({\r\n        text : '',\r\n        isValid : false,\r\n        message : '*address cannot be empty.'\r\n    });\r\n\r\n    const [squareCb, setSquareCb] = useState(false);\r\n    const [circularCb, setCircularCb] = useState(false);\r\n    const [squareCbChecked, setSquareCbChecked] = useState(true);\r\n    const [circularCbChecked, setCircularCbChecked] = useState(true);\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"title\">\r\n                Forms\r\n                <div className=\"sub-title\">\r\n                    <i className=\"fa fa-info-circle\"></i> input, textarea, select, multiple select, etc.\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"body\">\r\n                <Container>\r\n                    <Row>\r\n                        <Box sm={12} md={6} lg={6}>\r\n                            <BoxTitle label=\"Form Controls\"/>\r\n                            <Form>\r\n                                <div className=\"help\">\r\n                                    Text Input\r\n                                </div>\r\n                                <FormGroup>\r\n                                    <Input type=\"text\" name=\"first_name\" id=\"first_name\" placeholder=\"First Name\"/>\r\n                                </FormGroup>\r\n                                <div className=\"help\">\r\n                                    Password Input\r\n                                </div>\r\n                                <FormGroup>\r\n                                    <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\"/>\r\n                                </FormGroup>\r\n                                <div className=\"help\">\r\n                                    Select Options\r\n                                </div>\r\n                                <FormGroup>\r\n                                    <Select name=\"fruits\" id=\"fruits\">\r\n                                        <option>Apple</option>\r\n                                        <option>Manggo</option>\r\n                                        <option>Orange</option>\r\n                                        <option>Lemon</option>\r\n                                    </Select>\r\n                                </FormGroup>\r\n                                <div className=\"help\">\r\n                                    Password Input\r\n                                </div>\r\n                                <FormGroup>\r\n                                    <Textarea name=\"Address\" id=\"address\" placeholder=\"Address\"/>\r\n                                </FormGroup>\r\n                                <div className=\"help\">\r\n                                    Checkbox\r\n                                </div>\r\n                                <FormGroup>\r\n                                    <Checkbox label=\"Active\" isChecked={squareCb} handleChange={(e) => setSquareCb(e.target.checked)} className=\"m-r-20\"/>\r\n                                    <Checkbox label=\"Deleted\" isChecked={circularCb} handleChange={(e) => setCircularCb(e.target.checked)} isCircular={true} className=\"m-r-20\"/>\r\n                                    <Checkbox label=\"On\" isChecked={squareCbChecked} handleChange={(e) => setSquareCbChecked(e.target.checked)} className=\"m-r-20\"/>\r\n                                    <Checkbox label=\"Connect\" isChecked={circularCbChecked} handleChange={(e) => setCircularCbChecked(e.target.checked)} isCircular={true} className=\"m-r-20\"/>\r\n                                </FormGroup>\r\n                            </Form>\r\n                        </Box>\r\n                        <Box sm={12} md={6} lg={6}>\r\n                            <BoxTitle label=\"Length Validation\"/>\r\n                            <Form>\r\n                                <FormGroup>\r\n                                    <Input type=\"text\" maxLength={40} name=\"first_name\" id=\"first_name_length\" placeholder=\"First Name\"/>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Input type=\"password\" maxLength={20} name=\"password\" id=\"password_length\" placeholder=\"Password\"/>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Textarea  maxLength={100} name=\"Address\" id=\"address\" placeholder=\"Address\"/>\r\n                                </FormGroup>\r\n                            </Form>\r\n                            <BoxTitle label=\"Error Validation\"/>\r\n                            <Form>\r\n                                <FormGroup>\r\n                                    <Input \r\n                                        type=\"text\" \r\n                                        value={firstNameValidation.text}\r\n                                        isValid={firstNameValidation.isValid} \r\n                                        message={firstNameValidation.message} \r\n                                        name=\"first_name\" \r\n                                        id=\"first_name_valid\" \r\n                                        placeholder=\"First Name\"\r\n                                        handleChange={(e) => {\r\n                                            setFirstNameValidation(\r\n                                                {\r\n                                                    text : e.target.value,\r\n                                                    isValid : (e.target.value.length > 0 ? true : false),\r\n                                                    message : (e.target.value.length > 0 ? 'ok!' : '*please fill this field'),\r\n                                                }\r\n                                            )\r\n                                        }}/>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Input \r\n                                        type=\"password\" \r\n                                        value={passwordValidation.text}\r\n                                        isValid={passwordValidation.isValid} \r\n                                        message={passwordValidation.message} \r\n                                        maxLength={20} \r\n                                        name=\"password\" \r\n                                        id=\"password_length_validation\" \r\n                                        placeholder=\"Password\"\r\n                                        handleChange={(e) => {\r\n                                            setPasswordValidation(\r\n                                                {\r\n                                                    text : e.target.value,\r\n                                                    isValid : (e.target.value.length > 0 ? true : false),\r\n                                                    message : (e.target.value.length > 0 ? 'ok!' : '*please fill this field'),\r\n                                                }\r\n                                            )\r\n                                        }}/>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Select \r\n                                        name=\"fruits\" \r\n                                        id=\"fruits_validation\" \r\n                                        value={selectValidation.text}\r\n                                        isValid={selectValidation.isValid} \r\n                                        message={selectValidation.message} \r\n                                        placeholder=\"Select Fruit\"\r\n                                        handleChange={(e) => {\r\n                                            setSelectValidation(\r\n                                                {\r\n                                                    text : e.target.value,\r\n                                                    isValid : (e.target.value.length > 0 ? true : false),\r\n                                                    message : (e.target.value.length > 0 ? 'ok!' : '*please fill this field'),\r\n                                                }\r\n                                            )\r\n                                        }}>\r\n                                        <option>Apple</option>\r\n                                        <option>Manggo</option>\r\n                                        <option>Orange</option>\r\n                                        <option>Lemon</option>\r\n                                    </Select>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Textarea \r\n                                        maxLength={100} \r\n                                        value={addressValidation.text}\r\n                                        isValid={addressValidation.isValid} \r\n                                        message={addressValidation.message} \r\n                                        name=\"Address\" \r\n                                        id=\"address\" \r\n                                        placeholder=\"Address\"\r\n                                        handleChange={(e) => {\r\n                                            setAddressValidation(\r\n                                                {\r\n                                                    text : e.target.value,\r\n                                                    isValid : (e.target.value.length > 0 ? true : false),\r\n                                                    message : (e.target.value.length > 0 ? 'ok!' : '*please fill this field'),\r\n                                                }\r\n                                            )\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Form>\r\n                        </Box>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormsPage;","import React from 'react';\r\n\r\n/* Styles */\r\nimport { Col, Row, Container, IconCard, UserCard, Button, ImageCard,\r\n    ImageCardTitle,ImageCardSubTitle,ImageCardDescription,ProductCard,\r\n    ProductCardName,ProductCardImage,ProductCardPrice,ProductCardDescription, ProductCardCategory\r\n} from './../../styles';\r\n/* Styles */\r\n\r\nconst CardPage = () => {\r\n    return(\r\n        <div>\r\n            <div className=\"title\">\r\n                Icon Cards\r\n                <div className=\"sub-title\">\r\n                    <i className=\"fa fa-info-circle\"></i> squared box with bunch of element inside.\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"body add-spaces\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col xs={6} sm={6} md={3}>\r\n                            <IconCard label=\"iOS Downloads\" isWavy={true} number={5207} icon=\"fa fa-apple\"/>  \r\n                        </Col>  \r\n                        <Col xs={6} sm={6} md={3}> \r\n                            <IconCard label=\"Android Downloads\" number={10523} icon=\"fa fa-android\"/> \r\n                        </Col>\r\n                        <Col xs={6} sm={6} md={3}>\r\n                            <div className=\"help\">\r\n                                *no icon with wavy style\r\n                            </div>\r\n                            <IconCard label=\"Windows Phone Downloads\" isWavy={true} number={602} />\r\n                        </Col>  \r\n                        <Col xs={6} sm={6} md={3}> \r\n                            <div className=\"help\">\r\n                                *no icon with blank style\r\n                            </div>\r\n                            <IconCard label=\"Web Access\" number={9020321} /> \r\n                        </Col>             \r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12}>\r\n                            <div className=\"title\">\r\n                                User Cards\r\n                                <div className=\"sub-title\">\r\n                                    <i className=\"fa fa-info-circle\"></i> box contains with user information.\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col sm={12} md={12}>\r\n                            <Container>\r\n                                <Row>\r\n                                    <Col xs={12} sm={6} md={4} lg={3}>\r\n                                        <UserCard avatar=\"/images/avatar.png\" title=\"John Doe\" subTitle=\"Software Engineer\">\r\n                                            <Button label=\"Edit Profile\" size=\"medium\" icon=\"fa fa-gear\" isOutlined={true}/>\r\n                                        </UserCard> \r\n                                    </Col>\r\n                                    <Col xs={12} sm={6} md={4} lg={3}>\r\n                                        <UserCard avatar=\"/images/avatar.png\" background=\"/images/background.png\" title=\"John Doe\" subTitle=\"Software Engineer\">\r\n                                        </UserCard> \r\n                                    </Col>\r\n                                    <Col xs={12} sm={6} md={4} lg={3}>\r\n                                        <UserCard avatar=\"/images/avatar.png\" title=\"John Doe\" subTitle=\"Software Engineer\" isHorizontal={true}>\r\n                                        </UserCard> \r\n                                    </Col>\r\n                                </Row>\r\n                            </Container>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12}>\r\n                            <div className=\"title\">\r\n                                Image Cards\r\n                                <div className=\"sub-title\">\r\n                                    <i className=\"fa fa-info-circle\"></i> squared box with overlay or topped image.\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col sm={12} md={12}>\r\n                            <Container>\r\n                                <Row>\r\n                                    <Col xs={12} sm={6} md={4} lg={3}>\r\n                                        <ImageCard \r\n                                            image=\"/images/background.png\">\r\n                                                <ImageCardTitle>John Doe</ImageCardTitle>\r\n                                                <ImageCardSubTitle>Software Engineer</ImageCardSubTitle>\r\n                                                <ImageCardDescription maxLength={50}>\r\n                                                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n                                                </ImageCardDescription>\r\n                                                <Button size=\"medium\" type=\"primary\" label=\"Read more\"></Button>\r\n                                        </ImageCard> \r\n                                    </Col>\r\n                                    <Col xs={12} sm={6} md={4} lg={3}>\r\n                                        <ImageCard \r\n                                            image=\"/images/background.png\"\r\n                                            isOverlay={true}>\r\n                                                <ImageCardTitle>John Doe</ImageCardTitle>\r\n                                                <ImageCardSubTitle>Software Engineer</ImageCardSubTitle>\r\n                                                <ImageCardDescription maxLength={50}>\r\n                                                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n                                                </ImageCardDescription>\r\n                                                <Button size=\"small\" type=\"primary\" label=\"Read more\" isRounded={true}></Button>\r\n                                        </ImageCard> \r\n                                    </Col>\r\n                                </Row>\r\n                            </Container>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12}>\r\n                            <div className=\"title\">\r\n                                Product Cards\r\n                                <div className=\"sub-title\">\r\n                                    <i className=\"fa fa-info-circle\"></i> e-commerce product card.\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col sm={12} md={12}>\r\n                            <Container>\r\n                                <Row>\r\n                                    <Col xs={12} sm={6} md={4} lg={3}>\r\n                                        <ProductCard>\r\n                                            <ProductCardName>Asus Vivobook Ultra A412FL</ProductCardName>\r\n                                            <ProductCardCategory>Notebook</ProductCardCategory>\r\n                                            <ProductCardImage image=\"/images/asus.jpg\"/>\r\n                                            <ProductCardDescription maxLength={150}>\r\n                                                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n                                            </ProductCardDescription>\r\n                                            <ProductCardPrice price={1299} afterDiscountPrice={999} currency=\"$\"/>\r\n                                            <Button label=\"ADD TO CART\" size=\"small\" className=\"m-1\" />\r\n                                            <Button label=\"ADD TO WISHLIST\" size=\"small\" type=\"danger\" />\r\n                                        </ProductCard> \r\n                                    </Col>\r\n                                    <Col xs={12} sm={6} md={4} lg={3}>\r\n                                        <ProductCard>\r\n                                            <ProductCardName>Asus Vivobook Ultra A412FL</ProductCardName>\r\n                                            <ProductCardImage image=\"/images/asus.jpg\"/>\r\n                                            <ProductCardPrice price={1299} currency=\"$\"/>\r\n                                            <Button className=\"m-1\" icon=\"fa fa-shopping-cart\" isOutlined={true} isRounded={true}/>\r\n                                            <Button icon=\"fa fa-heart\" type=\"danger\" isOutlined={true} isRounded={true}/>\r\n                                        </ProductCard> \r\n                                    </Col>\r\n                                </Row>\r\n                            </Container>\r\n                        </Col>\r\n                    </Row>\r\n                </Container> \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardPage;","import React from 'react';\r\n\r\n/* Styles */\r\nimport { Box, Row, Container, Breadcrumb, BreadcrumbItem } from './../../styles';\r\n/* Styles */\r\n\r\nconst BreadcrumbsPage = () => {\r\n    return(\r\n        <div>\r\n            <div className=\"title\">\r\n                Breadcrumbs\r\n                <div className=\"sub-title\">\r\n                    <i className=\"fa fa-info-circle\"></i> give information about current page navigation.\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"body\">\r\n                <Container>\r\n                    <Row>\r\n                        <Box sm={12} md={12} lg={12}>\r\n                            <Breadcrumb>\r\n                                <BreadcrumbItem isActive={true}>\r\n                                    Products\r\n                                </BreadcrumbItem>\r\n                            </Breadcrumb>\r\n                        </Box>\r\n                        &nbsp;\r\n                        <Box sm={12} md={12} lg={12}>\r\n                            <Breadcrumb>\r\n                                <BreadcrumbItem>\r\n                                    <a href=\"#!\">Products</a>\r\n                                </BreadcrumbItem>\r\n                                <BreadcrumbItem isActive={true}>\r\n                                    Men's\r\n                                </BreadcrumbItem>\r\n                            </Breadcrumb>\r\n                        </Box>\r\n                        &nbsp;\r\n                        <Box sm={12} md={12} lg={12}>\r\n                            <Breadcrumb>\r\n                                <BreadcrumbItem>\r\n                                    <a href=\"#!\">Products</a>\r\n                                </BreadcrumbItem>\r\n                                <BreadcrumbItem>\r\n                                    <a href=\"#!\">Men's</a>\r\n                                </BreadcrumbItem>\r\n                                <BreadcrumbItem isActive={true}>\r\n                                    Watch\r\n                                </BreadcrumbItem>\r\n                            </Breadcrumb>\r\n                        </Box>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BreadcrumbsPage;","import React from 'react';\r\n\r\n/* Styles */\r\nimport { Box, Row, Container, Carousel, BoxTitle } from './../../styles';\r\n/* Styles */\r\n\r\nconst CarouselPage = () => {\r\n\r\n    const carouselImages = [\r\n        {\r\n            image: '/images/slider1.jpg',\r\n            useCaption : false,\r\n            handleClick : () => {\r\n                alert(\"Carousel clicked\");\r\n            }\r\n        },\r\n        {\r\n            image: '/images/slider2.jpg',\r\n            useCaption : true,\r\n            captionColor : '#000',\r\n            title: 'Caption Title',\r\n            subTitle: 'Caption Sub Title or Paragraph Here.'\r\n        },\r\n        {\r\n            image: '/images/slider3.jpg',\r\n            useCaption : false\r\n        }\r\n    ];\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"title\">\r\n                Carousel\r\n                <div className=\"sub-title\">\r\n                    <i className=\"fa fa-info-circle\"></i> a slideshow component.\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"body\">\r\n                <Container>\r\n                    <Row>\r\n                        <Box sm={12} md={6} lg={6}>\r\n                            <BoxTitle label=\"carousel with controls and indicators\"/>\r\n                            <Carousel id=\"default-carousel\" items={carouselImages} />\r\n                        </Box>\r\n                        <Box sm={12} md={6} lg={6}>\r\n                        <BoxTitle label=\"carousel without controls and indicators\"/>\r\n                            <Carousel id=\"empty-carousel\" items={carouselImages} indicators={false} controls={false} />\r\n                        </Box>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CarouselPage;","import React from 'react';\r\n\r\n/* libs */\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\n//font-awesome\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\n//bootstrap\r\nimport 'jquery/dist/jquery.min.js';\r\nimport 'popper.js/dist/popper.min.js';\r\nimport 'bootstrap/dist/js/bootstrap.min.js';\r\n/* libs */\r\n\r\n/* components */\r\nimport Navbar from './components/layouts/Navbar.js';\r\nimport Menubar from './components/layouts/Menubar';\r\n/* components */\r\n\r\n/* pages sample */\r\nimport LoginPage from './components/pages/LoginPage';\r\nimport SignupPage from './components/pages/SignupPage';\r\nimport ForgotPasswordPage from './components/pages/ForgotPasswordPage';\r\nimport ResetPasswordPage from './components/pages/ResetPasswordPage';\r\n/* pages sample */\r\n\r\n/* pages components */\r\nimport BoxPage from './components/pages/components/BoxPage.js';\r\nimport AlertPage from './components/pages/components/AlertPage.js';\r\nimport BadgePage from './components/pages/components/BadgePage.js';\r\nimport ButtonPage from './components/pages/components/ButtonPage.js';\r\nimport FormsPage from './components/pages/components/FormsPage';\r\nimport CardPage from './components/pages/components/CardPage.js';\r\nimport BreadcrumbsPage from './components/pages/components/BreadcrumbsPage';\r\nimport CarouselPage from './components/pages/components/CarouselPage';\r\n/* pages components */\r\n\r\nconst App = () => {\r\n    return(\r\n        <div>          \r\n            {/* Start routing here */}\r\n            <Router>\r\n                {/* Top navigation bar and Menu bar */}\r\n                <Navbar />\r\n                <Menubar />\r\n                \r\n                {/* set container width to all content */}\r\n                <div className=\"container content\">\r\n                    {/* A <Switch> looks through its children <Route>s and\r\n                    renders the first one that matches the current URL. */}\r\n                    <Switch>\r\n                        {/* Pages Sample */}\r\n                        <Route path=\"/page/login\" component={LoginPage} />\r\n                        <Route path=\"/page/signup\" component={SignupPage} />\r\n                        <Route path=\"/page/forgot-password\" component={ForgotPasswordPage} />\r\n                        <Route path=\"/page/reset-password\" component={ResetPasswordPage} />\r\n\r\n                        {/* Components */}\r\n                        <Route path=\"/components/box\" component={BoxPage} />\r\n                        <Route path=\"/components/alert\" component={AlertPage} />\r\n                        <Route path=\"/components/badges\" component={BadgePage} />\r\n                        <Route path=\"/components/buttons\" component={ButtonPage} />\r\n                        <Route path=\"/components/forms\" component={FormsPage} />\r\n                        <Route path=\"/components/cards\" component={CardPage} />\r\n                        <Route path=\"/components/breadcrumbs\" component={BreadcrumbsPage} />\r\n                        <Route path=\"/components/carousel\" component={CarouselPage} />\r\n\r\n                        {/* Default index page */}\r\n                        <Route path=\"/\" />\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './sass/index.scss';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}